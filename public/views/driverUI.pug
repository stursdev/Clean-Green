extends layout

block content

    .navbar.navbar-expand-lg.navbar-dark.bg-dark.navbar-full
      a.navbar-brand(href='/register/driverUI')
        img(src='/css/img/recycleicon.svg', width='35', height='35', alt='GnC')
      span.user_type Driver #{user.firstName}

      button.navbar-toggler(type='button', data-toggle='collapse', data-target='#navbarSupportedContent', aria-controls='navbarSupportedContent', aria-expanded='false', aria-label='Toggle navigation')
        span.navbar-toggler-icon
      #navbarSupportedContent.collapse.navbar-collapse
        ul.navbar-nav.mr-auto
          li.nav-item
            a.client_btn.btn.btn-success(href='/register/profile') Profile
        ul.navbar-nav.ml-auto
          li.nav-item
            a.btn.btn-success(href='/logout') Logout

    div(class='container-fluid')
      div(class='row')
        div.dark_sidebar(class='col-3')
          if (recyclables.length === 0)
            p There is no pending order
          else
            each v in recyclables
              if v.processed === false
                ul.list-group.list-group-flush
                  li.list-group-item(style="background-color:#464e57")
                    form(method='POST', action='/process')
                      span(style="font-weight: bold;")= v.creatorName
                      br
                      small= v.street
                      br
                      input(style='display:none', name='address', value=v.street)
                      button.btn.btn-sm.btn-success(type='submit', style="float:right;") Process
                

        div(class='col-9')
          .mapbox_driver
            #map
              
            script.
              var x = !{JSON.stringify(recyclables)}
              

              function initMap() {
                  var map = new google.maps.Map(document.getElementById('map'), 
                    {
                      zoom: 15,
                      center: { lat: 44.69254300000001, lng: -73.46696199999997 },
                      disableDefaultUI: true,

                      styles: [
                        {elementType: 'geometry', stylers: [{color: '#242f3e'}]},
                        {elementType: 'labels.text.stroke', stylers: [{color: '#242f3e'}]},
                        {elementType: 'labels.text.fill', stylers: [{color: '#746855'}]},
                        {
                          featureType: 'administrative.locality',
                          elementType: 'labels.text.fill',
                          stylers: [{color: '#d59563'}]
                        },
                        {
                          featureType: 'poi',
                          elementType: 'labels.text.fill',
                          stylers: [{color: '#d59563'}]
                        },
                        {
                          featureType: 'poi.park',
                          elementType: 'geometry',
                          stylers: [{color: '#263c3f'}]
                        },
                        {
                          featureType: 'poi.park',
                          elementType: 'labels.text.fill',
                          stylers: [{color: '#6b9a76'}]
                        },
                        {
                          featureType: 'road',
                          elementType: 'geometry',
                          stylers: [{color: '#38414e'}]
                        },
                        {
                          featureType: 'road',
                          elementType: 'geometry.stroke',
                          stylers: [{color: '#212a37'}]
                        },
                        {
                          featureType: 'road',
                          elementType: 'labels.text.fill',
                          stylers: [{color: '#9ca5b3'}]
                        },
                        {
                          featureType: 'road.highway',
                          elementType: 'geometry',
                          stylers: [{color: '#746855'}]
                        },
                        {
                          featureType: 'road.highway',
                          elementType: 'geometry.stroke',
                          stylers: [{color: '#1f2835'}]
                        },
                        {
                          featureType: 'road.highway',
                          elementType: 'labels.text.fill',
                          stylers: [{color: '#f3d19c'}]
                        },
                        {
                          featureType: 'transit',
                          elementType: 'geometry',
                          stylers: [{color: '#2f3948'}]
                        },
                        {
                          featureType: 'transit.station',
                          elementType: 'labels.text.fill',
                          stylers: [{color: '#d59563'}]
                        },
                        {
                          featureType: 'water',
                          elementType: 'geometry',
                          stylers: [{color: '#17263c'}]
                        },
                        {
                          featureType: 'water',
                          elementType: 'labels.text.fill',
                          stylers: [{color: '#515c6d'}]
                        },
                        {
                          featureType: 'water',
                          elementType: 'labels.text.stroke',
                          stylers: [{color: '#17263c'}]
                        }
                      ]
                    }
                  );

                  var markers = []
                  for (var i = 0; i < x.length; i++) {
                    var loc = {};
                    loc.coords = {};
                    loc.coords.lat = x[i].latitude;
                    loc.coords.lng = x[i].longitude;
                    loc.content = '<strong>'+ x[i].creatorName + '</strong><br/>' + x[i].street + '<br/><small>' + x[i].city + ', ' + x[i].state + '</small>';
                    markers.push(loc);
                  }

                  for (var i = 0; i < x.length; i++) {
                    if (x[i].processed == false) 
                      addNotProcessedMarker( markers[i] ); 
                    else {
                      var h = new Date();
                      var localTime = h.getTime();
                      if ((localTime - x[i].processedTime) < 3 * 60 * 1000)
                        addProcessedMarker(markers[i]); 
                    }
                  }

                  function addNotProcessedMarker(props) {
                    var marker = new google.maps.Marker({
                      position: props.coords,
                      animation: google.maps.Animation.DROP,
                      map: map,
                      icon: {
                        // url: '../css/img/markerDriver.svg',
                        url: '../css/img/markerDriver.png',
                        scaledSize: new google.maps.Size(40, 64)
                      }
                    });
                    if (props.content) {
                      var infoWindow = new google.maps.InfoWindow({content: props.content}); 
                      marker.addListener('click', function() {
                        infoWindow.open(map, marker);
                      });
                    }
                  }

                  function addProcessedMarker(props) {
                    var marker = new google.maps.Marker({
                      position: props.coords,
                      animation: google.maps.Animation.DROP,
                      map: map,
                      icon: {
                        // url: '../css/img/markerChecked.svg',
                        url: '../css/img/markerChecked.png',
                        scaledSize: new google.maps.Size(40, 64)
                      }
                    });
                    if (props.content) {
                      var infoWindow = new google.maps.InfoWindow({content: props.content}); 
                      marker.addListener('click', function() {
                        infoWindow.open(map, marker);
                      });
                    }
                  }

                }







              // >>> function for make markers bounce
              function toggleBounce() {
                if (marker.getAnimation() !== null) {
                  marker.setAnimation(null);
                } else {
                  marker.setAnimation(google.maps.Animation.BOUNCE);
                }
              }
        
      script(src='https://maps.googleapis.com/maps/api/js?key=AIzaSyCrqfaam7V-4NH0SBi8LUcJRzMtaGl28Y4&callback=initMap')
